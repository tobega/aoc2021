composer coords
  {x1: <"1">, (<','>) y1: <"1">, (<' -> '>) x2: <"1">, (<','>) y2: <"1">}
end coords

def input: [$IN::lines -> coords];

source solution&{part:}
  @: [0..999 -> [0..999 -> 0]];
  $input ... -> \(when <?($part <='part2'>)|{x1: <=$.x2>}|{y1: <=$.y2>}> do $! \) -> points -> @($(1); $(2)): $@($(1); $(2)) + 1;
  $@... ... -> \(<2..> $!\) -> ..=Count !
end solution

templates range
  when <?($(2) <..~$(1)>)> do $(1)..$(2):-1 !
  otherwise $(1)..$(2) !
end range

templates points
  when <{x1: <=$.x2>}|{y1: <=$.y2>}> do [by [$.x1, $.x2] -> range -> $+1, by [$.y1, $.y2] -> range -> $+1] !
  
  otherwise
    def points: [[[$.x1, $.x2] -> range -> $+1], [[$.y1, $.y2] -> range -> $+1]];
    1..$points(1)::length -> $points(first..last; $) !
end points

$solution&{part: '$:'part' -> SYS::property;'} -> '$;$#10;' -> !OUT::write
